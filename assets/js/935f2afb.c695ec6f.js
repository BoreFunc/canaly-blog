"use strict";(self.webpackChunkbf_canaly_blog=self.webpackChunkbf_canaly_blog||[]).push([[53],{1109:e=>{e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"link","label":"Introduction","href":"/canaly/docs/intro","docId":"intro"},{"type":"category","label":"Tutorial","items":[{"type":"link","label":"Welcome to CAP-rs","href":"/canaly/docs/tutorial/welcome","docId":"tutorial/welcome"}],"collapsed":true,"collapsible":true}],"documentSidebar":[{"type":"link","label":"Overview","href":"/canaly/docs/document/overview","docId":"document/overview"}],"analysisSidebar":[{"type":"link","label":"Overview","href":"/canaly/docs/analysis/overview","docId":"analysis/overview"},{"type":"link","label":"Versions of libreaderex","href":"/canaly/docs/analysis/versions","docId":"analysis/versions"}]},"docs":{"analysis/overview":{"id":"analysis/overview","title":"Overview","description":"CAJ files are proprietary file formats, so the only way to parse them is to reverse engineer them. (Well you can guess if you\'re lucky, but that\'s not the case here.)","sidebar":"analysisSidebar"},"analysis/versions":{"id":"analysis/versions","title":"Versions of libreaderex","description":"ReaderEx, or libreaderex, which is a dynamic library developed by the author of CAJ format. It is used to parse CAJ files. It is not open source, so we have to reverse engineer it to understand how it works.","sidebar":"analysisSidebar"},"document/overview":{"id":"document/overview","title":"Overview","description":"","sidebar":"documentSidebar"},"intro":{"id":"intro","title":"Introduction","description":"Canaly is a simple, fast, and lightweight library for parsing and generating CAJ files.","sidebar":"tutorialSidebar"},"tutorial/welcome":{"id":"tutorial/welcome","title":"Welcome to CAP-rs","description":"","sidebar":"tutorialSidebar"}}}')}}]);